package chap03.review

/**
 * 함수의 각 정보는 프레임이라는 정보로 스택 메모리에 높은 주소부터 낮은 주소로 거꾸로 채워져 감
 * 즉 여기서는 main() 함수의 정보를 담고있는 프레임과, Max() 함수의 정보를 담고 있는 프레임이 스택 메모리에 적재되며,
 * 프레임은 스택의 특성에 따라 높은 메모리 주소부터 거꾸로 자라듯이 채워져 나감
 *
 * 1. 함수가 호출되면 스택 내부에 프레임이 생김, 함수 별 프레임은 확실히 분리되어 있음
 * 2. 함수가 종료되면 프레임도 사라지며, 따라서 프레임 내부에 있던 지역변수도 사라짐
 * 3. 함수는 스택에 쌓이므로, 생성된 순서대로 사라지는 것이 아닌 최근에 생성된 것이 사라짐 (Recursion Call)
 * 4. 만약 함수가 너무 많이 호출되어 정해진 스택의 영역을 넘어서면 => StackOverFlow 발생 (힙은 참고로 스택과 다르게 낮은 메모리 주소에서 높은 메모리 주소로 쌓아나감 따라서 둘이 부딫히지 않도록 관리!)
 */
fun main() {
    val num1 = 10
    val num2 = 3
    val result : Int

    result = Max(num1, num2)
    println(result)

}

fun Max(a : Int, b : Int) = if (a>b) a else b